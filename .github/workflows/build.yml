# Regular build for all pushes and pull requests

name: Build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:

  gradleValidation:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

  properties:
    name: Export Properties
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=changelog::$CHANGELOG"

  checks:
    name: Run Checks
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Run Unit Tests
        run: ./gradlew allTests testDebugUnitTest --stacktrace
      - name: Publish Test Report
        if: always() && (github.event_name == 'pull_request')
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: '**/build/test-results/**/*.xml'
      - name: Run Detekt
        if: always()
        run: ./gradlew detekt --stacktrace
      - name: Generate Detekt Annotations
        if: always() && (github.event_name == 'pull_request')
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          name: Detekt Report
          title: Detekt Report
          path: '**/build/reports/detekt.xml'
      - name: Run Lint
        if: always()
        run: ./gradlew lint --stacktrace
      - name: Generate Lint Annotations
        if: always() && (github.event_name == 'pull_request')
        uses: yutailang0119/action-android-lint@v1.1.0
        with:
          xml_path: '**/build/reports/lint*.xml'

  dokka:
    name: Generate Dokka Documentation
    if: (github.event_name == 'pull_request') || (github.ref != 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Generate Documentation
        run: ./gradlew dokkaHtml --stacktrace

  publishDokka:
    name: Publish Dokka Documentation
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: properties
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
        with:
          path: glimpse
          persist-credentials: false
          fetch-depth: 0
      - name: Fetch Documentation
        uses: actions/checkout@v2.3.5
        with:
          repository: glimpse-graphics/docs
          path: docs
          persist-credentials: false
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Generate Documentation
        run: |
          cd glimpse
          ./gradlew dokkaHtmlMultiModule --stacktrace
      - name: Update Documentation
        env:
          VERSION: v${{ needs.properties.outputs.version }}
        run: |
          cd docs
          rm -rf ${VERSION%%-*}
          mkdir ${VERSION%%-*}
          cp -R ../glimpse/build/dokka/htmlMultiModule/* ./${VERSION%%-*}/
      - name: Commit Documentation Changes
        env:
          VERSION: v${{ needs.properties.outputs.version }}
        run: |
          cd docs
          git add ${VERSION%%-*}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update docs ${VERSION%%-*}" -a
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          repository: glimpse-graphics/docs
          branch: main
          directory: docs
          github_token: ${{ secrets.PUSH_TOKEN }}

  assemble:
    name: Assemble Library
    if: (github.event_name == 'pull_request') || (github.ref != 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Assemble Library
        run: ./gradlew assemble --stacktrace

  releaseDraft:
    name: Draft New Release
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: properties
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}
      - name: Create Release Draft
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.properties.outputs.version }}
          release_name: v${{ needs.properties.outputs.version }}
          body: ${{ needs.properties.outputs.changelog }}
          draft: true

  snapshot:
    name: Publish To OSSRH Snapshot Repository
    if: (github.event_name != 'pull_request') && (github.ref == 'refs/heads/main')
    needs: gradleValidation
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.5
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 11
      - name: Decrypt Key Ring File
        env:
          FILE_PASSPHRASE: ${{ secrets.FILE_PASSPHRASE }}
        run: gpg --quiet --batch --yes --decrypt --passphrase="${FILE_PASSPHRASE}" --output secring.gpg secring.gpg.gpg
      - name: Publish To OSSRH Snapshot Repository
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASS: ${{ secrets.SIGNING_PASS }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publish -PglimpseVersionSuffix="SNAPSHOT" -Psigning.secretKeyRingFile=../../secring.gpg -Psigning.password="${SIGNING_PASS}" -Psigning.keyId="${SIGNING_KEY_ID}" --stacktrace
